{
  "name": "OpenCAD Library",
  "tagline": "OpenSource lib under X/MIT license to work with CAD files.",
  "body": "# libOpenCAD\r\nOpenSource library under X11/MIT license for everyday use. Under development, but some of basic functionality is already available.\r\n\r\nAll help will be very good for project. A lot of TODO's in code, so you can fix something you want.\r\n\r\nAPI\r\n---\r\nTypical usage pipeline is shown below:\r\nOpen CAD file:\r\n```cpp\r\n#include <iostream>\r\n#include \"opencad_api.h\"\r\n\r\nCADFile * opendwg = OpenCADFile(\"/path/to/example.dwg/dxf\");\r\n```\r\n\r\nFrom now on, you can access geometries like this:\r\n```cpp\r\nint geometries_count = opendwg->GetGeometriesCount();\r\nfor(auto i = 0; i < geometries_count; ++i)\r\n{\r\n    CADGeometries::CADGeometry * geom = dwgfile->GetGeometry (i);\r\n    // now, geom->sGeometryType stores a type of returned geometry. Then,\r\n    // you have to cast it to this class, eg.\r\n    if ( geom->sGeometryType == CADGeometries::CADGeometryType::CIRCLE )\r\n    {\r\n        CADGeometries::Circle * circle = geom;\r\n        // There you go. Now you can get all the data you want, eg.\r\n        std::cout << circle->dfCenterX;\r\n        std::cout << circle->dfCenterY;\r\n        std::cout << circle->dfCenterZ;\r\n        std::cout << circle->dfRadius;\r\n    }\r\n}\r\n```\r\n\r\nNow supported CAD files version are:\r\n\r\n1. R2000 (read-only). Its under development still, and a lot of geometries are missed, but it will all come with time.\r\n2. Next up on the list: R2004.\r\n\r\nBuild status\r\n------------\r\nLinux (gcc + clang): [![Build Status](https://travis-ci.org/sandyre/libopencad.svg?branch=master)](https://travis-ci.org/sandyre/libopencad)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}